{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red5\green61\blue204;\red63\green105\blue30;
\red109\green109\blue109;\red0\green0\blue109;\red0\green0\blue254;\red15\green112\blue3;\red82\green0\blue103;
\red63\green105\blue30;\red251\green2\blue7;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c1680\c19835\c100000;\cssrgb\c0\c33896\c83855;\cssrgb\c30831\c47797\c15540;
\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c0\c0\c42745;\csgenericrgb\c0\c0\c99608;\csgenericrgb\c5882\c43922\c1176;\csgenericrgb\c32157\c0\c40392;
\cssrgb\c30831\c47797\c15540;\cssrgb\c100000\c14913\c0;\cssrgb\c0\c0\c0\c84314;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0\c84314;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid301\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid402\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid403\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid501\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid601\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid702\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid801\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid902\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid1001\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1103\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid1201\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1302\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid1401\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1502\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1503\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1504\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker     }{\leveltext\leveltemplateid1601\'04    ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}}
\paperw11900\paperh16840\margl1440\margr1440\vieww35640\viewh22400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 DataStructures & Algorithm Questions\
\

\f1\b\fs36 Array
\f0\b0\fs24  \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf2 Find the Kth minimum element in the array\cf3  \

\f0\b0 \cf0 \

\f1\b Solution 1 : \cf4 Efficient\cf0 \

\f0\b0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Sort the element of array in ascending order \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}Can sort by adding the elements in collection \
{\listtext	\uc0\u8259 	}(OR) can sort by using two for loop  \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Find the Kth position value in array (ie: array[K-1])\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \

\f1\b Solution 2 : Using Binary Search Tree\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0
\f0\b0 \cf0 {\listtext	\uc0\u8226 	}Add all the elements of array to Binary search tree \
{\listtext	\uc0\u8226 	}Do In-order Traversal (Breadth first traversal) \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}In-order traversal will arrange the elements in ascending order\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}Find the Kth position value in array (ie: array[K-1])\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \

\f1\b Solution 3 : Using Min Heap\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0
\f0\b0 \cf0 {\listtext	\uc0\u8226 	}Add all the elements of array to Min Heap \
{\listtext	\uc0\u8226 	}Remove element K-1 times from Min Heap \
{\listtext	\uc0\u8226 	}Return the root element value in Min Heap \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0
\f2\i \cf5 {\listtext	    	}/**\
{\listtext	    	} *  Kth Smallest Element\
{\listtext	    	} */\
\ls4\ilvl0
\f1\i0\b \cf6 {\listtext	    	}fun 
\f0\b0 \cf0 testSecondSmallestElement() \{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 smallestValue = secondSmallestElement(\cf7 5\cf0 , 
\f2\i arrayOf
\f0\i0 (\cf7 7\cf0 , \cf7 3\cf0 , \cf7 6\cf0 , \cf7 2\cf0 , \cf7 4\cf0 , \cf7 17\cf0 , \cf7 19\cf0 , \cf7 22\cf0 , \cf7 1\cf0 ))\
{\listtext	    	}    
\f2\i println
\f0\i0 (
\f1\b \cf8 "Smallest value is \cf6 $
\f0\b0 \cf0 smallestValue
\f1\b \cf8 "
\f0\b0 \cf0 )\
{\listtext	    	}\}\
{\listtext	    	}\
\ls4\ilvl0
\f1\b \cf6 {\listtext	    	}fun 
\f0\b0 \cf0 secondSmallestElement(k: Int, arr: Array<Int>): Int \{\
{\listtext	    	}\
{\listtext	    	}    sortAscending(arr)\
{\listtext	    	}    
\f1\b \cf6 return 
\f0\b0 \cf0 arr[k - \cf7 1\cf0 ]\
{\listtext	    	}\}\
{\listtext	    	}\
\ls4\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 sortAscending(arr: Array<Int>) \{\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 for 
\f0\b0 \cf0 (i 
\f1\b \cf6 in 
\f0\b0 \cf7 0 
\f2\i \cf0 until 
\f0\i0 arr.
\f1\b \cf9 size 
\f0\b0 \cf0 - \cf7 1\cf0 ) \{\
{\listtext	    	}        
\f1\b \cf6 for 
\f0\b0 \cf0 (j 
\f1\b \cf6 in 
\f0\b0 \cf0 i + \cf7 1 
\f2\i \cf0 until 
\f0\i0 arr.
\f1\b \cf9 size
\f0\b0 \cf0 ) \{\
{\listtext	    	}            
\f1\b \cf6 if 
\f0\b0 \cf0 (arr[i] > arr[j]) \{\
{\listtext	    	}                
\f1\b \cf6 var 
\f0\b0 \cf0 temp = arr[i]\
{\listtext	    	}                arr[i] = arr[j]\
{\listtext	    	}                arr[j] = temp\
{\listtext	    	}            \}\
{\listtext	    	}        \}\
{\listtext	    	}    \}\
{\listtext	    	}\
{\listtext	    	}\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 /************************************************************************************************************************************************/\
\

\f1\b \cf2 First the first non repetitive Integers in array\cf0  
\f0\b0 \
\

\f1\b Solution 1\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls5\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f0\b0 Create two list 
\f1\b nonRepetitiveList
\f0\b0  & 
\f1\b repetitiveList
\f0\b0  \
\ls5\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f0\b0 Iterate through element in array \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls5\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 for each element check 
\f1\b repetitiveList 
\f0\b0 whether it contains element, \
\pard\tx1660\tx2160\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2160\fi-2160\pardirnatural\partightenfactor0
\ls5\ilvl2
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 if 
\f1\b repetitiveList
\f0\b0  contains element , ignore and continue\
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls5\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 for each element check 
\f1\b nonRepetitiveList 
\f0\b0 contains element \
\pard\tx1660\tx2160\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2160\fi-2160\pardirnatural\partightenfactor0
\ls5\ilvl2
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 if
\f1\b  nonRepetitiveList 
\f0\b0  contains element, move the element to 
\f1\b repetitiveList 
\f0\b0 and continue\
\ls5\ilvl2
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 if 
\f1\b nonRepetitiveList 
\f0\b0  don\'92t contains element, then add the element to 
\f1\b nonRepetitiveList 
\f0\b0  and continue\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls5\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f0\b0 once iteration completed, return the first element in nonRepetitiveList\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls6\ilvl0
\f2\i\b0 \cf5 {\listtext	    	}/**\
{\listtext	    	} *  First non repetitive Element\
{\listtext	    	} */\
{\listtext	    	}\
\ls6\ilvl0
\f1\i0\b \cf6 {\listtext	    	}fun 
\f0\b0 \cf0 testFirstNonRepetitiveElementInArray() \{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 firstNonRepetitiveElement = firstNonRepetitiveElementInArrayHashMap(
\f2\i arrayOf
\f0\i0 (\cf7 7\cf0 , \cf7 3\cf0 , \cf7 6\cf0 , \cf7 2\cf0 , \cf7 4\cf0 , \cf7 7\cf0 , \cf7 3\cf0 , \cf7 22\cf0 , \cf7 6\cf0 , \cf7 2\cf0 ))\
{\listtext	    	}    
\f2\i println
\f0\i0 (
\f1\b \cf8 "First non-repeating integers in an array is \cf6 $
\f0\b0 \cf0 firstNonRepetitiveElement
\f1\b \cf8 "
\f0\b0 \cf0 )\
{\listtext	    	}\}\
{\listtext	    	}\
\ls6\ilvl0
\f1\b \cf6 {\listtext	    	}fun 
\f0\b0 \cf0 firstNonRepetitiveElementInArray(arr: Array<Int>): Int \{\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 nonRepetitiveList = 
\f2\i mutableListOf
\f0\i0 <Int>()\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 repetitiveList = 
\f2\i mutableListOf
\f0\i0 <Int>()\
{\listtext	    	}\
{\listtext	    	}    arr.
\f2\i forEach 
\f1\i0\b \{\
{\listtext	    	}        \cf6 if 
\f0\b0 \cf0 (repetitiveList.contains(
\f1\b it
\f0\b0 )) \{\
{\listtext	    	}            
\f2\i \cf5 // do Nothing\
{\listtext	    	}        
\f0\i0 \cf0 \} 
\f1\b \cf6 else if 
\f0\b0 \cf0 (nonRepetitiveList.contains(
\f1\b it
\f0\b0 )) \{\
{\listtext	    	}            repetitiveList.add(
\f1\b it
\f0\b0 )\
{\listtext	    	}            nonRepetitiveList.remove(
\f1\b it
\f0\b0 )\
{\listtext	    	}        \} 
\f1\b \cf6 else 
\f0\b0 \cf0 \{\
{\listtext	    	}            nonRepetitiveList.add(
\f1\b it
\f0\b0 )\
{\listtext	    	}        \}\
{\listtext	    	}    
\f1\b \}\
{\listtext	    	}\
{\listtext	    	}    \cf6 return 
\f0\b0 \cf0 nonRepetitiveList.
\f2\i first
\f0\i0 ()\
{\listtext	    	}\}\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls7\ilvl0
\f1\b \cf0 {\listtext	    	}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
Solution 2 : \cf10 Efficient\cf0 \
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls8\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f0\b0 Create hash map which map 
\f1\b character
\f0\b0  to 
\f1\b number of repetition 
\f0\b0 HashMap<Element, Int>\
{\listtext	\uc0\u8226 	}Iterate through elements in array\
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls8\ilvl1\cf0 {\listtext	\uc0\u8259 	}for each element check the hash map and increment the count\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls8\ilvl0\cf0 {\listtext	\uc0\u8226 	}Now Hash map got all the element with repetitive count \
{\listtext	\uc0\u8226 	}Again Iterate through elements in array\
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls8\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 for each element check the count in hash map\
\ls8\ilvl1
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 return the first element with count as 1
\f1\b \
{\listtext	\uc0\u8259 	}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls9\ilvl0
\f2\i\b0 \cf5 {\listtext	    	}/**\
{\listtext	    	} * First non repetitive Element Using Hash Map\
{\listtext	    	} */\
\ls9\ilvl0
\f1\i0\b \cf6 {\listtext	    	}fun 
\f0\b0 \cf0 firstNonRepetitiveElementInArrayHashMap(arr: Array<Int>): Int \{\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 charCountMap = 
\f2\i mutableMapOf
\f0\i0 <Int, Int>()\
{\listtext	    	}\
{\listtext	    	}    arr.
\f2\i forEach 
\f1\i0\b \{\
{\listtext	    	}\
{\listtext	    	}        \cf6 val 
\f0\b0 \cf0 count = charCountMap[
\f1\b it
\f0\b0 ]\
{\listtext	    	}        charCountMap[
\f1\b it
\f0\b0 ] = count?.plus(\cf7 1\cf0 ) ?: \cf7 1\
{\listtext	    	}    
\f1\b \cf0 \}\
{\listtext	    	}    
\f0\b0 arr.
\f2\i forEach 
\f1\i0\b \{\
{\listtext	    	}        \cf6 if 
\f0\b0 \cf0 (charCountMap[
\f1\b it
\f0\b0 ] == \cf7 1\cf0 ) \{\
{\listtext	    	}            
\f1\b \cf6 return \cf0 it\
{\listtext	    	}        
\f0\b0 \}\
{\listtext	    	}    
\f1\b \}\
{\listtext	    	}    \cf6 return 
\f0\b0 \cf7 0\cf0 ;\
{\listtext	    	}\}\
{\listtext	    	}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 /************************************************************************************************************************************************/
\f1\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\cf2 Merge two sorted array
\f0\b0 \cf0 \

\f1\b  \
Solution 1 \
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls10\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f0\b0 Create an 
\f1\b newArray
\f0\b0  with size of both the array (array1.size + array2. size )\
\ls10\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f0\b0 create 2 variable 
\f1\b array1Index 
\f0\b0 & 
\f1\b array2index 
\f0\b0 with initial value as 0\
\ls10\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f0\b0 start iterating through 
\f1\b newArray 
\f0\b0 \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls10\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 In each index compare values of 
\f1\b array1
\f0\b0 [
\f1\b array1Index
\f0\b0 ] with 
\f1\b array2
\f0\b0 [
\f1\b array2index
\f0\b0 ]\
\ls10\ilvl1
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 copy the smallest value to 
\f1\b newArray
\f0\b0  \
\ls10\ilvl1
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 increment the index of array from which the value is copied \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls10\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f0\b0 once the iteration is completed the two sorted array will be merged together as new array 
\f1\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls11\ilvl0
\f2\i\b0 \cf5 {\listtext	    	}/**\
{\listtext	    	} * merge two sorted array\
{\listtext	    	} */\
{\listtext	    	}\
\ls11\ilvl0
\f1\i0\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 testMergeTwoSortedArray()\{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 mergedArray = mergeTwoSortedArray(
\f2\i arrayOf
\f0\i0 (\cf7 5\cf0 , \cf7 8\cf0 , \cf7 9\cf0 ), 
\f2\i arrayOf
\f0\i0 (\cf7 4\cf0 , \cf7 7\cf0 , \cf7 8\cf0 ))\
{\listtext	    	}    
\f2\i println
\f0\i0 (mergedArray)\
{\listtext	    	}\}\
{\listtext	    	}\
\ls11\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 mergeTwoSortedArray(array1: Array<Int>, array2: Array<Int>) : Array<Int?>\{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 mergedArray = 
\f2\i arrayOfNulls
\f0\i0 <Int>(array1.
\f1\b \cf9 size
\f0\b0 \cf0 +array2.
\f1\b \cf9 size
\f0\b0 \cf0 )\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 array1Index = \cf7 0\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 array2Index = \cf7 0\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 for
\f0\b0 \cf0 (i 
\f1\b \cf6 in 
\f0\b0 \cf7 0 
\f2\i \cf0 until 
\f0\i0 mergedArray.
\f1\b \cf9 size
\f0\b0 \cf0 )\{\
{\listtext	    	}        
\f1\b \cf6 var 
\f0\b0 \cf0 array1Val = Int.
\f1\b \cf9 MAX_VALUE\
{\listtext	    	}        \cf6 var 
\f0\b0 \cf0 array2Val = Int.
\f1\b \cf9 MAX_VALUE\
{\listtext	    	}        \cf6 if
\f0\b0 \cf0 (array1Index<array1.
\f1\b \cf9 size
\f0\b0 \cf0 )\{\
{\listtext	    	}            array1Val = array1[array1Index]\
{\listtext	    	}        \}\
{\listtext	    	}\
{\listtext	    	}        
\f1\b \cf6 if
\f0\b0 \cf0 (array2Index<array2.
\f1\b \cf9 size
\f0\b0 \cf0 )\{\
{\listtext	    	}            array2Val = array2[array2Index]\
{\listtext	    	}        \}\
{\listtext	    	}\
{\listtext	    	}        
\f1\b \cf6 if
\f0\b0 \cf0 (array1Val< array2Val)\{\
{\listtext	    	}            mergedArray[i] = array1Val\
{\listtext	    	}            array1Index++\
{\listtext	    	}        \}
\f1\b \cf6 else
\f0\b0 \cf0 \{\
{\listtext	    	}            mergedArray[i] = array2Val\
{\listtext	    	}            array2Index++\
{\listtext	    	}        \}\
{\listtext	    	}    \}\
{\listtext	    	}    
\f1\b \cf6 return 
\f0\b0 \cf0 mergedArray\
{\listtext	    	}\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b0 \cf0 /************************************************************************************************************************************************/\

\f1\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 Find the first bad version in the array of version of Size n\cf0 \
Eg: \
array of version \{1, 2, 3, 4, 5, 6, 7, 8 , 9, 10\}\
Bad version in array are \{1, 2, 3, 4, 5, \cf11 6, 7, 8 , 9, 10\cf0 \}\

\f0\b0 Output: First bad version is 6\
\

\f1\b Solution 1
\f0\b0 \
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls12\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f0\b0 Find the mid position in array and check if version is bad\
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls12\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 if version is bad then
\f1\b  
\f0\b0 start focus on left set of versions\
\pard\tx1660\tx2160\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2160\fi-2160\pardirnatural\partightenfactor0
\ls12\ilvl2
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 recursive again from 
\f1\b start index
\f0\b0  to 
\f1\b mid index \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls12\ilvl1\cf0 {\listtext	\uc0\u8259 	}
\f0\b0 if version is Good then
\f1\b  
\f0\b0 start focus on right set of versions\
\pard\tx1660\tx2160\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2160\fi-2160\pardirnatural\partightenfactor0
\ls12\ilvl2
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 recursive again from 
\f1\b mid index
\f0\b0  to 
\f1\b end index \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls12\ilvl1\cf0 {\listtext	\uc0\u8259 	}
\f0\b0 at some point there will be only 2 versions to verify\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls12\ilvl0\cf0 {\listtext	\uc0\u8226 	}verify the bad version and return the result\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls13\ilvl0
\f2\i\b0 \cf5 {\listtext	    	}/**\
{\listtext	    	} * Find the first bad version\
{\listtext	    	} */\
\ls13\ilvl0
\f1\i0\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 testFindFirstBadVersion() \{\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 firstBadVersion = findFirstBadVersion(
\f2\i arrayOf
\f0\i0 (\cf7 1\cf0 , \cf7 2\cf0 , \cf7 3\cf0 , \cf7 4\cf0 , \cf7 5\cf0 , \cf7 6\cf0 , \cf7 7\cf0 , \cf7 8\cf0 , \cf7 9\cf0 , \cf7 10\cf0 ))\
{\listtext	    	}    
\f2\i println
\f0\i0 (
\f1\b \cf8 "First bad version is \cf6 $
\f0\b0 \cf0 firstBadVersion
\f1\b \cf8 "
\f0\b0 \cf0 )\
{\listtext	    	}\}\
{\listtext	    	}\
\ls13\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 findFirstBadVersion(arr: Array<Int>): Int \{\
{\listtext	    	}    
\f1\b \cf6 return 
\f0\b0 \cf0 badVersion(\cf7 0\cf0 , arr.
\f1\b \cf9 size 
\f0\b0 \cf0 - \cf7 1\cf0 , arr)\
{\listtext	    	}\}\
{\listtext	    	}\
\ls13\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 badVersion(startIndex: Int, endIndex: Int, arr: Array<Int>): Int \{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 size = endIndex - startIndex + \cf7 1\
{\listtext	    	}    
\f1\b \cf6 if 
\f0\b0 \cf0 (size <= \cf7 2\cf0 ) \{\
{\listtext	    	}        
\f1\b \cf6 if
\f0\b0 \cf0 (isBadVersion(arr[startIndex]))\{\
{\listtext	    	}            
\f1\b \cf6 return 
\f0\b0 \cf0 arr[startIndex]\
{\listtext	    	}        \}
\f1\b \cf6 else
\f0\b0 \cf0 \{\
{\listtext	    	}            
\f1\b \cf6 return 
\f0\b0 \cf0 arr[endIndex]\
{\listtext	    	}        \}\
{\listtext	    	}    \}\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 mid = size / \cf7 2\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 minIndex = startIndex + mid\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 if 
\f0\b0 \cf0 (isBadVersion(arr[minIndex])) \{\
{\listtext	    	}        
\f1\b \cf6 return 
\f0\b0 \cf0 badVersion(startIndex, minIndex, arr)\
{\listtext	    	}    \} 
\f1\b \cf6 else 
\f0\b0 \cf0 \{\
{\listtext	    	}        
\f1\b \cf6 return 
\f0\b0 \cf0 badVersion(minIndex, endIndex, arr)\
{\listtext	    	}    \}\
{\listtext	    	}\}\
{\listtext	    	}\
\ls13\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 isBadVersion(item: Int): Boolean \{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 badVersion = \cf7 8\
{\listtext	    	}    
\f1\b \cf6 return 
\f0\b0 \cf0 item >= badVersion\
{\listtext	    	}\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b0 \cf0 /************************************************************************************************************************************************/
\f1\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs36 \cf0 Stack
\fs24 \
\
\cf2 Sort values in stack using temporary stack
\f0\b0 \cf0  \
\

\f1\b Solution 1\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls14\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f0\b0 Create a new empty stack 
\f1\b \cf12 \cb13 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec12 tmpStack\cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
{\listtext	\uc0\u8226 	}
\f0\b0 Create a temporary variable as 
\f1\b element\
{\listtext	\uc0\u8226 	}
\f0\b0 pop value from 
\f1\b stack
\f0\b0  and store it in 
\f1\b element 
\f0\b0  \
\ls14\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f0\b0 compare 
\f1\b element
\f0\b0  value with top value in 
\f1\b \cf14 \cb13 \expnd0\expndtw0\kerning0
tmpStack
\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0  \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls14\ilvl1\cf0 {\listtext	\uc0\u8259 	}while 
\f1\b \cf14 \cb13 \expnd0\expndtw0\kerning0
tmpStack\cf0 \cb1 \kerning1\expnd0\expndtw0  
\f0\b0 is not empty and top of 
\f1\b \cf14 \cb13 \expnd0\expndtw0\kerning0
tmpStack\cf0 \cb1 \kerning1\expnd0\expndtw0  
\f0\b0 is greater than element \
{\listtext	\uc0\u8259 	}pop from 
\f1\b \cf14 \cb13 \expnd0\expndtw0\kerning0
tmpStack
\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0  and push to 
\f1\b stack
\f0\b0  \
{\listtext	\uc0\u8259 	}push 
\f1\b element
\f0\b0  to 
\f1\b \cf14 \cb13 \expnd0\expndtw0\kerning0
tmpStack\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls14\ilvl0
\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}return the 
\f1\b \cf14 \cb13 \expnd0\expndtw0\kerning0
tmpStack
\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls15\ilvl0
\f2\i\b0 \cf5 {\listtext	    	}/**\
{\listtext	    	} * Sort elements in stack\
{\listtext	    	} */\
\ls15\ilvl0
\f1\i0\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 testSortElementInStack()\{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 stack = Stack<Int>()\
{\listtext	    	}    stack.push(\cf7 23\cf0 )\
{\listtext	    	}    stack.push(\cf7 92\cf0 )\
{\listtext	    	}    stack.push(\cf7 98\cf0 )\
{\listtext	    	}    stack.push(\cf7 31\cf0 )\
{\listtext	    	}    stack.push(\cf7 3\cf0 )\
{\listtext	    	}    stack.push(\cf7 34\cf0 )\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 sortedStack = sortElementInStack(stack)\
{\listtext	    	}    
\f2\i println
\f0\i0 (sortedStack)\
{\listtext	    	}\}\
{\listtext	    	}\
\ls15\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 sortElementInStack(stack: Stack<Int>): Stack<Int>\{\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 sortedStack = Stack<Int>()\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 while
\f0\b0 \cf0 (stack.
\f2\i isNotEmpty
\f0\i0 ())\{\
{\listtext	    	}        
\f1\b \cf6 var 
\f0\b0 \cf0 element = stack.pop()\
{\listtext	    	}\
{\listtext	    	}        
\f1\b \cf6 while 
\f0\b0 \cf0 (sortedStack.
\f2\i isNotEmpty
\f0\i0 () && element < sortedStack.peek())\{\
{\listtext	    	}            stack.push(sortedStack.pop())\
{\listtext	    	}        \}\
{\listtext	    	}        sortedStack.push(element)\
{\listtext	    	}    \}\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 return 
\f0\b0 \cf0 sortedStack\
{\listtext	    	}\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b0 \cf0 /************************************************************************************************************************************************/
\f1\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\cf2 Check balanced parentheses in an expression \cf0 \
\
Solution 1\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls16\ilvl0\cf0 {\listtext	\uc0\u8226 	}
\f0\b0 create 2 array \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls16\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 arrayOpenBraces  \{, [, (, < \
\ls16\ilvl1
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 arrayCloseBraces \}, ], ), > \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls16\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f0\b0 create a stack \
\ls16\ilvl0
\f1\b {\listtext	\uc0\u8226 	}
\f0\b0 iterate through expression \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls16\ilvl1
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 if character exists in 
\f1\b arrayOpenBraces 
\f0\b0 add it to stack \
\ls16\ilvl1
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 if character exists in 
\f1\b arrayCloseBraces \
\pard\tx1660\tx2160\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2160\fi-2160\pardirnatural\partightenfactor0
\ls16\ilvl2\cf0 {\listtext	\uc0\u8259 	}
\f0\b0 check if the top element in stack has is matching open braces \
\ls16\ilvl2
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 if got matching open braces pop the open brace from stack \
\ls16\ilvl2
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 if don\'92t got matching open braces \
\pard\tx2380\tx2880\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2880\fi-2880\pardirnatural\partightenfactor0
\ls16\ilvl3\cf0 {\listtext	\uc0\u8259 	}return the expression is not balanced
\f1\b \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural\partightenfactor0
\ls16\ilvl1\cf0 {\listtext	\uc0\u8259 	}
\f0\b0 once iterating throughout the expression \
\pard\tx1660\tx2160\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li2160\fi-2160\pardirnatural\partightenfactor0
\ls16\ilvl2
\f1\b \cf0 {\listtext	\uc0\u8259 	}
\f0\b0 if the stack is empty return that the expression is balanced\
\ls16\ilvl2
\f1\b {\listtext	\uc0\u8259 	}
\f0\b0 if the stack if not empty return that the expression is not balanced
\f1\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls17\ilvl0
\f2\i\b0 \cf5 {\listtext	    	}/**\
{\listtext	    	} * Balanced parentheses in expression\
{\listtext	    	} */\
{\listtext	    	}\
\ls17\ilvl0
\f1\i0\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 testCheckBalancedParentheses()\{\
{\listtext	    	}    
\f1\b \cf6 var 
\f0\b0 \cf0 result = checkBalancedParentheses(
\f1\b \cf8 "[\{(\{\})\}]"
\f0\b0 \cf0 )\
{\listtext	    	}    
\f2\i println
\f0\i0 (result)\
{\listtext	    	}\}\
{\listtext	    	}\
\ls17\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 checkBalancedParentheses(input: String) : Boolean\{\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 arrayOpenBraces = 
\f2\i arrayOf
\f0\i0 (
\f1\b \cf8 '\{'
\f0\b0 \cf0 , 
\f1\b \cf8 '['
\f0\b0 \cf0 , 
\f1\b \cf8 '('
\f0\b0 \cf0 , 
\f1\b \cf8 '<'
\f0\b0 \cf0 )\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 arrayCloseBraces = 
\f2\i arrayOf
\f0\i0 (
\f1\b \cf8 '\}'
\f0\b0 \cf0 , 
\f1\b \cf8 ']'
\f0\b0 \cf0 , 
\f1\b \cf8 ')'
\f0\b0 \cf0 , 
\f1\b \cf8 '>'
\f0\b0 \cf0 )\
{\listtext	    	}\
{\listtext	    	}    
\f1\b \cf6 val 
\f0\b0 \cf0 stack = Stack<Char>()\
{\listtext	    	}\
{\listtext	    	}    input.
\f2\i forEach 
\f1\i0\b \{\
{\listtext	    	}        \cf6 if
\f0\b0 \cf0 (getPositionInArray(
\f1\b it
\f0\b0 , arrayOpenBraces)>=\cf7 0\cf0 )\{\
{\listtext	    	}            stack.push(
\f1\b it
\f0\b0 )\
{\listtext	    	}        \}
\f1\b \cf6 else if
\f0\b0 \cf0 (getPositionInArray(
\f1\b it
\f0\b0 , arrayCloseBraces)>=\cf7 0\cf0 ) \{\
{\listtext	    	}            
\f1\b \cf6 val 
\f0\b0 \cf0 position = getPositionInArray(
\f1\b it
\f0\b0 , arrayCloseBraces)\
{\listtext	    	}            
\f1\b \cf6 if
\f0\b0 \cf0 (stack.
\f2\i isNotEmpty
\f0\i0 () && stack.peek() == arrayOpenBraces[position])\
{\listtext	    	}                stack.pop()\
{\listtext	    	}            
\f1\b \cf6 else\
{\listtext	    	}                return false\
{\listtext	    	}        
\f0\b0 \cf0 \}\
{\listtext	    	}    
\f1\b \}\
{\listtext	    	}\
{\listtext	    	}    \cf6 return 
\f0\b0 \cf0 stack.isEmpty()\
{\listtext	    	}\}\
{\listtext	    	}\
\ls17\ilvl0
\f1\b \cf6 {\listtext	    	}private fun 
\f0\b0 \cf0 getPositionInArray(value: Char, array: Array<Char> ): Int \{\
{\listtext	    	}\
{\listtext	    	}    array.
\f2\i forEachIndexed 
\f1\i0\b \{ 
\f0\b0 index, c 
\f1\b ->\
{\listtext	    	}        \cf6 if
\f0\b0 \cf0 (c == value)\
{\listtext	    	}            
\f1\b \cf6 return 
\f0\b0 \cf0 index\
{\listtext	    	}    
\f1\b \}\
{\listtext	    	}    \cf6 return 
\f0\b0 \cf0 -\cf7 1\
\ls17\ilvl0\cf0 {\listtext	    	}\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b0 \cf0 /************************************************************************************************************************************************/
\f1\b \
}